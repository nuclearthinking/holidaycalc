{"version":3,"sources":["components/Header.js","feature/groups/groupsSlice.js","components/PartyConfiguration.js","App.js","store.js","index.js"],"names":["Header","groupsSlice","createSlice","name","initialState","groups","payments","reducers","addGroup","state","action","push","payload","addPerson","id","find","group","persons","nanoid","drinksAlcohol","eatMeat","addSpending","spendings","amount","type","changePersonName","person","findPerson","toggleDrinksAlcohol","toggleEatMeat","changeSpendingAmount","spending","findSpending","changeSpendingType","addPayments","data","length","pop","p","actions","PartyConfiguration","useSelector","storage","useState","modalShow","setModalShow","groupName","setGroupName","groupNameState","setGroupNameState","dispatch","useDispatch","handleCloseModal","className","map","i","Group","style","marginTop","onClick","Calculate","CalculationResults","Modal","show","onHide","closeButton","Title","Body","placeholder","value","onChange","e","target","Footer","setTimeout","props","icon","faPlusCircle","color","Person","Spending","checked","htmlFor","setShow","useEffect","fetch","method","headers","body","JSON","stringify","eventName","participants","then","response","ok","json","console","error","catch","PaymentRow","payer","recepient","faArrowRight","marginLeft","marginRight","faRubleSign","size","App","routes","path","element","Layout","children","index","useRoutes","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.67e5fd49.chunk.js","sourcesContent":["export default function Header() {\n\n    return <div/>\n\n\n    //\n    // <nav className=\"navbar navbar-light bg-light\" style={{marginBottom: 10}}>\n    //     <div className=\"container-fluid\">\n    //         <form className=\"d-flex\">\n    //             <input className=\"form-control me-2\" type=\"search\" placeholder=\"url\" aria-label=\"Search\" disabled={true}/>\n    //             <button className=\"btn btn-outline-dark\" type=\"button\">share</button>\n    //         </form>\n    //     </div>\n    // </nav>\n}","import {createSlice, nanoid} from \"@reduxjs/toolkit\"\n\nconst initialState = {\n    groups: [],\n    payments: [],\n}\n\nexport const groupsSlice = createSlice({\n    name: 'storage',\n    initialState: initialState,\n    reducers: {\n        addGroup(state, action) {\n            state.groups.push(action.payload)\n        },\n        addPerson(state, action) {\n            const {id} = action.payload\n            const group = state.groups.find(group => group.id === id)\n            group.persons.push({\n                id: nanoid(),\n                name: '',\n                drinksAlcohol: true,\n                eatMeat: true,\n            })\n        },\n        addSpending(state, action) {\n            const {id} = action.payload\n            const group = state.groups.find(group => group.id === id)\n            group.spendings.push({\n                id: nanoid(),\n                amount: '',\n                type: 'other'\n            })\n        },\n        changePersonName(state, action) {\n            const {id, name} = action.payload\n            let person = findPerson(id, state)\n            if (person != null) {\n                person.name = name\n            }\n        },\n        toggleDrinksAlcohol(state, action) {\n            const {id} = action.payload;\n            const person = findPerson(id, state)\n            if (person != null) {\n                person.drinksAlcohol = !person.drinksAlcohol\n            }\n        },\n        toggleEatMeat(state, action) {\n            const {id} = action.payload\n            const person = findPerson(id, state)\n            if (person != null) {\n                person.eatMeat = !person.eatMeat\n            }\n        },\n        changeSpendingAmount(state, action) {\n            const {id, amount} = action.payload\n            const spending = findSpending(id, state)\n            if (spending != null) {\n                spending.amount = amount\n            }\n        },\n        changeSpendingType(state, action) {\n            const {id, type} = action.payload\n            const spending = findSpending(id, state)\n            if (spending != null) {\n                spending.type = type\n            }\n        },\n        addPayments(state, action) {\n            const {data} = action.payload;\n            const payments = state.payments\n            if (!data) return\n            while (payments.length > 0){\n                payments.pop()\n            }\n            for (const p of data) {\n                payments.push(p)\n            }\n        }\n    }\n})\n\nfunction findPerson(id, state) {\n    let person = null\n    for (const group of state.groups) {\n        for (const person of group.persons) {\n            if (person.id === id) {\n                return person\n            }\n        }\n    }\n    return person\n}\n\nfunction findSpending(id, state) {\n    let spending = null\n    for (const group of state.groups) {\n        for (const spending of group.spendings) {\n            if (spending.id === id) {\n                return spending\n            }\n        }\n    }\n    return spending\n}\n\nexport const {\n    addGroup, addPerson, addSpending,\n    changePersonName, toggleDrinksAlcohol, toggleEatMeat,\n    changeSpendingAmount, changeSpendingType,\n    addPayments,\n} = groupsSlice.actions","import {useDispatch, useSelector} from 'react-redux'\nimport {useEffect, useState} from 'react'\nimport {\n    addGroup,\n    addPerson,\n    addSpending,\n    changePersonName,\n    changeSpendingAmount,\n    changeSpendingType,\n    toggleDrinksAlcohol,\n    toggleEatMeat,\n    addPayments\n} from \"../feature/groups/groupsSlice\";\nimport {nanoid} from '@reduxjs/toolkit'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faPlusCircle, faRubleSign, faArrowRight} from '@fortawesome/free-solid-svg-icons'\nimport {Modal} from 'react-bootstrap'\n\nexport default function PartyConfiguration() {\n    const groups = useSelector(state => state.storage.groups)\n    const [modalShow, setModalShow] = useState(false)\n    const [groupName, setGroupName] = useState('')\n    const [groupNameState, setGroupNameState] = useState('empty')\n\n    const dispatch = useDispatch()\n\n\n    function onModalGroupNameChange(e) {\n        setGroupName(e.target.value)\n    }\n\n    const handleCloseModal = () => setModalShow(false)\n    const handleShowModal = () => setModalShow(true)\n\n    function addNewGroup() {\n        if (groupName.length >= 3) {\n            dispatch(addGroup({\n                id: nanoid(),\n                name: groupName,\n                persons: [],\n                spendings: [],\n            }))\n            setGroupNameState('empty')\n            setGroupName('')\n            setModalShow(false)\n        } else {\n            setGroupNameState('error')\n            setTimeout(() => {\n                setGroupNameState('empty')\n            }, 2000)\n        }\n    }\n\n    function getGroupNameInputClass() {\n        if (groupNameState === 'empty') {\n            return 'form-control form-control-lg'\n        } else {\n            return 'form-control form-control-lg is-invalid'\n        }\n    }\n\n    return <div className='container'>\n        {groups.map((group, i) => {\n            return <Group\n                name={group.name}\n                id={group.id}\n                key={group.id}\n                persons={group.persons}\n                spendings={group.spendings}\n            />\n        })}\n        <div className={'row align-content-center'} style={{marginTop: 10}}>\n            <button type=\"button\" className=\"btn btn-success btn-lg\" onClick={handleShowModal}>\n                Добавить группу\n            </button>\n        </div>\n        <Calculate/>\n        <CalculationResults/>\n        <Modal show={modalShow} onHide={handleCloseModal}>\n            <Modal.Header closeButton>\n                <Modal.Title>Добавить новую группу</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className={'row justify-content-center'}>\n                    <div className={'col-1'}/>\n                    <div className={'col-auto'}>\n                        <input\n                            className={getGroupNameInputClass()}\n                            type=\"text\"\n                            placeholder=\"Введите название\"\n                            value={groupName}\n                            onChange={onModalGroupNameChange}\n                        />\n                    </div>\n                    <div className={'col-1'}/>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={handleCloseModal}>Закрыть</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={addNewGroup}>Добавить</button>\n            </Modal.Footer>\n        </Modal>\n    </div>\n}\n\nfunction Group(props) {\n    const {id, name, persons, spendings} = props\n    const dispatch = useDispatch()\n\n\n    function addNewPerson() {\n        dispatch(addPerson({\n            id: id\n        }))\n    }\n\n    function addNewSpending() {\n        dispatch(addSpending({\n            id: id\n        }))\n    }\n\n    return (\n        <div className='container' style={{marginTop: 15}}>\n            <div className='row'>\n                <p className={'h3'}>{name}</p>\n            </div>\n            <div className={'row'}>\n                <div className={'col'}>\n                    <p className={'h6'}>Участники <FontAwesomeIcon icon={faPlusCircle} color={'green'}\n                                                                   onClick={addNewPerson}/></p>\n                </div>\n            </div>\n            <div className='row justify-content-center'>\n                {persons ? persons.map((person, i) => {\n                    return <Person\n                        name={person.name}\n                        drinksAlcohol={person.drinksAlcohol}\n                        eatMeat={person.eatMeat}\n                        id={person.id}\n                        key={person.id}\n                    />\n                }) : ''}\n            </div>\n            <div className={'row'} style={{marginTop: 5}}>\n                <div className={'col'}>\n                    <p className={'h6'}>Траты <FontAwesomeIcon icon={faPlusCircle} color={'green'}\n                                                               onClick={addNewSpending}/></p>\n                </div>\n            </div>\n            <div className='row justify-content-center'>\n                {spendings ? spendings.map((spending, i) => {\n                    return <Spending\n                        amount={spending.amount}\n                        type={spending.type}\n                        id={spending.id}\n                        key={spending.id}\n                    />\n                }) : ''}\n            </div>\n        </div>\n    )\n}\n\n\nfunction Person(props) {\n    const {id, name, eatMeat, drinksAlcohol} = props\n    const dispatch = useDispatch()\n\n    function onChangeName(e) {\n        dispatch(changePersonName({\n            id: id,\n            name: e.target.value,\n        }))\n    }\n\n    function onChangeDrinksAlcohol() {\n        dispatch(toggleDrinksAlcohol({id: id}))\n    }\n\n    function onChangeEatMeat() {\n        dispatch(toggleEatMeat({id: id}))\n    }\n\n    return (\n        <div className={'row align-content-center'}>\n            <div className={'row justify-content-center'}>\n                <div className={'col-md-12 col-lg-6'}>\n                    <div className=\"input-group flex-nowrap\">\n                        <span className=\"input-group-text\" id=\"name\"><i className=\"bi bi-person-circle\"/></span>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Имя\" value={name}\n                               onChange={onChangeName}/>\n                    </div>\n                </div>\n                <div className={'col-md-12 col-lg-6 align-self-center'}>\n                    <div className=\"form-check form-check-inline\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id={id + ':alcoholCheckbox'}\n                               checked={drinksAlcohol}\n                               onChange={onChangeDrinksAlcohol}/>\n                        <label className=\"form-check-label\" htmlFor={id + ':alcoholCheckbox'}>Алкоголь</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id={id + \":meatCheckbox\"} checked={eatMeat}\n                               onChange={onChangeEatMeat}/>\n                        <label className=\"form-check-label\" htmlFor={id + \":meatCheckbox\"}>Мясо</label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction Spending(props) {\n    const {id, amount, type} = props\n    const dispatch = useDispatch()\n\n    function onChangeAmount(e) {\n        dispatch(changeSpendingAmount({\n            id: id,\n            amount: e.target.value,\n        }))\n    }\n\n    function onChangeType(e) {\n        dispatch(changeSpendingType({\n            id: id,\n            type: e.target.value,\n        }))\n    }\n\n    return (\n        <div className={'row'} style={{marginTop: 5}}>\n            <div className=\"input-group flex-nowrap\">\n                <input type=\"number\" className=\"form-control\" placeholder=\"Сумма\" value={amount}\n                       onChange={onChangeAmount}/>\n                <select className=\"form-select\" value={type} onChange={onChangeType}>\n                    <option value={'other'}>Другое</option>\n                    <option value={'alcohol'}>Алкоголь</option>\n                    <option value={'meat'}>Мясо</option>\n                </select>\n            </div>\n        </div>\n    )\n}\n\nfunction Calculate() {\n    const groups = useSelector(state => state.storage.groups)\n    const [show, setShow] = useState(false)\n\n    const dispatch = useDispatch()\n\n\n    function onClick() {\n        fetch('/calculator/calculate-spendings', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    eventName: 'event',\n                    participants: groups,\n                })\n            }\n        ).then((response) => {\n            if (!response.ok) {\n                console.error('error')\n            } else {\n                return response.json()\n            }\n        }).then(data => {\n            dispatch(addPayments({data: data.payments}))\n        }).catch(function (error) {\n            console.error(error)\n        })\n\n    }\n\n    useEffect(() => {\n        if (groups.length >= 2) {\n            setShow(true)\n        }\n    }, [groups])\n\n\n    if (show) {\n        return <div className={'row align-content-center'} style={{marginTop: 10}}>\n            <button type=\"button\" className=\"btn btn-success btn-lg\" onClick={onClick}>\n                Посчитать\n            </button>\n        </div>\n    } else {\n        return <div/>\n    }\n}\n\nfunction CalculationResults() {\n    const [show, setShow] = useState(false)\n    const payments = useSelector(state => state.storage.payments)\n\n    useEffect(() => {\n        if (payments) {\n            setShow(true)\n        } else {\n            setShow(false)\n        }\n    }, [payments])\n\n\n    if (show) {\n        return <div className={'container'} style={{marginTop: 20}}>\n            <div className={'row'}>\n                {payments.map((p, i) => {\n                    return <PaymentRow\n                        payer={p.payer}\n                        amount={p.amount}\n                        recepient={p.recepient}\n                    />\n                })}\n            </div>\n        </div>\n    } else {\n        return <div/>\n    }\n}\n\nfunction PaymentRow(props) {\n    return <div className={'row align-content-center'}>\n        <div className={'col-md-12 justify-content-center'}>\n            <p className={'h5 text-center'}>{props.payer}<FontAwesomeIcon\n                icon={faArrowRight} style={{marginLeft: 30, marginRight: 30}}/> {props.amount}<FontAwesomeIcon\n                icon={faRubleSign} size={'xs'}/> <FontAwesomeIcon\n                icon={faArrowRight} style={{marginLeft: 30, marginRight: 30}}/>{props.recepient}</p>\n        </div>\n    </div>\n}","import Header from \"./components/Header\";\nimport {Outlet, useRoutes} from \"react-router-dom\";\nimport PartyConfiguration from \"./components/PartyConfiguration\";\n\n\n\nexport default function App() {\n    let routes = [\n        {\n            path: \"/\",\n            element: <Layout/>,\n            children: [\n                {index: true, element: <PartyConfiguration/>},\n            ]\n        }\n    ];\n    let element = useRoutes(routes);\n\n    return (\n        <div>\n            {element}\n        </div>\n    );\n}\n\n\nfunction Layout(){\n    return <div className={'container'}>\n        <Header/>\n        <Outlet/>\n    </div>\n}\n","import {configureStore} from \"@reduxjs/toolkit\";\nimport {groupsSlice} from \"./feature/groups/groupsSlice\";\n\nexport default configureStore({\n    reducer: {\n        storage: groupsSlice.reducer,\n    }\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}