{"version":3,"sources":["components/Header.js","feature/groups/groupsSlice.js","components/PartyConfiguration.js","App.js","feature/counter/counterSlice.js","store.js","index.js"],"names":["Header","groupsSlice","createSlice","name","initialState","reducers","addGroup","state","action","push","payload","addPerson","id","find","group","persons","nanoid","drinksAlcohol","eatMeat","addSpending","spendings","amount","type","changePersonName","person","findPerson","toggleDrinksAlcohol","toggleEatMeat","changeSpendingAmount","spending","findSpending","changeSpendingType","actions","PartyConfiguration","groups","useSelector","useState","modalShow","setModalShow","groupName","setGroupName","groupNameState","setGroupNameState","dispatch","useDispatch","handleCloseModal","className","map","i","Group","style","marginTop","onClick","Calculate","Modal","show","onHide","closeButton","Title","Body","placeholder","value","onChange","e","target","Footer","length","setTimeout","props","icon","faPlusCircle","color","Person","Spending","checked","htmlFor","setShow","useEffect","console","log","JSON","stringify","eventName","participants","fetch","method","headers","body","then","response","ok","catch","error","App","routes","path","element","Layout","children","index","useRoutes","counterSlice","increment","decrement","incrementByAmount","configureStore","reducer","counter","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.527dc7b3.chunk.js","sourcesContent":["export default function Header() {\n\n    return <div/>\n\n\n    //\n    // <nav className=\"navbar navbar-light bg-light\" style={{marginBottom: 10}}>\n    //     <div className=\"container-fluid\">\n    //         <form className=\"d-flex\">\n    //             <input className=\"form-control me-2\" type=\"search\" placeholder=\"url\" aria-label=\"Search\" disabled={true}/>\n    //             <button className=\"btn btn-outline-dark\" type=\"button\">share</button>\n    //         </form>\n    //     </div>\n    // </nav>\n}","import {createSlice, nanoid} from \"@reduxjs/toolkit\"\n\nconst initialState = []\n\nexport const groupsSlice = createSlice({\n    name: 'groups',\n    initialState: initialState,\n    reducers: {\n        addGroup(state, action) {\n            state.push(action.payload)\n        },\n        addPerson(state, action) {\n            const {id} = action.payload\n            const group = state.find(group => group.id === id)\n            group.persons.push({\n                id: nanoid(),\n                name: '',\n                drinksAlcohol: true,\n                eatMeat: true,\n            })\n        },\n        addSpending(state, action) {\n            const {id} = action.payload\n            const group = state.find(group => group.id === id)\n            group.spendings.push({\n                id: nanoid(),\n                amount: '',\n                type: 'other'\n            })\n        },\n        changePersonName(state, action) {\n            const {id, name} = action.payload\n            let person = findPerson(id, state)\n            if (person != null) {\n                person.name = name\n            }\n        },\n        toggleDrinksAlcohol(state, action) {\n            const {id} = action.payload;\n            const person = findPerson(id, state)\n            if (person != null) {\n                person.drinksAlcohol = !person.drinksAlcohol\n            }\n        },\n        toggleEatMeat(state, action) {\n            const {id} = action.payload\n            const person = findPerson(id, state)\n            if (person != null) {\n                person.eatMeat = !person.eatMeat\n            }\n        },\n        changeSpendingAmount(state, action) {\n            const {id, amount} = action.payload\n            const spending = findSpending(id, state)\n            if (spending != null) {\n                spending.amount = amount\n            }\n        },\n        changeSpendingType(state, action) {\n            const {id, type} = action.payload\n            const spending = findSpending(id, state)\n            if (spending != null) {\n                spending.type = type\n            }\n        }\n    }\n})\n\nfunction findPerson(id, state) {\n    let person = null\n    for (const group of state) {\n        person = group.persons.find(person => person.id === id)\n    }\n    return person\n}\n\nfunction findSpending(id, state) {\n    let spending = null\n    for (const group of state) {\n        spending = group.spendings.find(spending => spending.id === id)\n    }\n    return spending\n}\n\nexport const {\n    addGroup, addPerson, addSpending,\n    changePersonName, toggleDrinksAlcohol, toggleEatMeat,\n    changeSpendingAmount, changeSpendingType\n} = groupsSlice.actions","import {useDispatch, useSelector} from 'react-redux'\nimport {useEffect, useState} from 'react'\nimport {\n    addGroup,\n    addPerson,\n    addSpending,\n    changePersonName,\n    changeSpendingAmount,\n    changeSpendingType,\n    toggleDrinksAlcohol,\n    toggleEatMeat\n} from \"../feature/groups/groupsSlice\";\nimport {nanoid} from '@reduxjs/toolkit'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport {Modal} from 'react-bootstrap'\n\nexport default function PartyConfiguration() {\n    const groups = useSelector(state => state.groups)\n    const [modalShow, setModalShow] = useState(false)\n    const [groupName, setGroupName] = useState('')\n    const [groupNameState, setGroupNameState] = useState('empty')\n\n    const dispatch = useDispatch()\n\n\n    function onModalGroupNameChange(e) {\n        setGroupName(e.target.value)\n    }\n\n    const handleCloseModal = () => setModalShow(false)\n    const handleShowModal = () => setModalShow(true)\n\n    function addNewGroup() {\n        if (groupName.length >= 3) {\n            dispatch(addGroup({\n                id: nanoid(),\n                name: groupName,\n                persons: [],\n                spendings: [],\n            }))\n            setGroupNameState('empty')\n            setGroupName('')\n            setModalShow(false)\n        } else {\n            setGroupNameState('error')\n            setTimeout(() => {\n                setGroupNameState('empty')\n            }, 2000)\n        }\n    }\n\n    function getGroupNameInputClass() {\n        if (groupNameState === 'empty') {\n            return 'form-control form-control-lg'\n        } else {\n            return 'form-control form-control-lg is-invalid'\n        }\n    }\n\n    return <div className='container'>\n        {groups.map((group, i) => {\n            return <Group\n                name={group.name}\n                id={group.id}\n                key={group.id}\n                persons={group.persons}\n                spendings={group.spendings}\n            />\n        })}\n        <div className={'row align-content-center'} style={{marginTop: 10}}>\n            <button type=\"button\" className=\"btn btn-success btn-lg\" onClick={handleShowModal}>\n                +\n            </button>\n        </div>\n        <Calculate/>\n        <Modal show={modalShow} onHide={handleCloseModal}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add new group</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className={'row justify-content-center'}>\n                    <div className={'col-1'}/>\n                    <div className={'col-auto'}>\n                        <input\n                            className={getGroupNameInputClass()}\n                            type=\"text\"\n                            placeholder=\"Group name\"\n                            value={groupName}\n                            onChange={onModalGroupNameChange}\n                        />\n                    </div>\n                    <div className={'col-1'}/>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={handleCloseModal}>Close</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={addNewGroup}>Add</button>\n            </Modal.Footer>\n        </Modal>\n    </div>\n}\n\nfunction Group(props) {\n    const {id, name, persons, spendings} = props\n    const dispatch = useDispatch()\n\n\n    function addNewPerson() {\n        dispatch(addPerson({\n            id: id\n        }))\n    }\n\n    function addNewSpending() {\n        dispatch(addSpending({\n            id: id\n        }))\n    }\n\n    return (\n        <div className='container' style={{marginTop: 15}}>\n            <div className='row'>\n                <p className={'h3'}>{name}</p>\n            </div>\n            <div className={'row'}>\n                <div className={'col'}>\n                    <p className={'h6'}>Persons <FontAwesomeIcon icon={faPlusCircle} color={'green'}\n                                                                 onClick={addNewPerson}/></p>\n                </div>\n            </div>\n            <div className='row justify-content-center'>\n                {persons ? persons.map((person, i) => {\n                    return <Person\n                        name={person.name}\n                        drinksAlcohol={person.drinksAlcohol}\n                        eatMeat={person.eatMeat}\n                        id={person.id}\n                        key={person.id}\n                    />\n                }) : ''}\n            </div>\n            <div className={'row'} style={{marginTop: 5}}>\n                <div className={'col'}>\n                    <p className={'h6'}>Spendings <FontAwesomeIcon icon={faPlusCircle} color={'green'}\n                                                                   onClick={addNewSpending}/></p>\n                </div>\n            </div>\n            <div className='row justify-content-center'>\n                {spendings ? spendings.map((spending, i) => {\n                    return <Spending\n                        amount={spending.amount}\n                        type={spending.type}\n                        id={spending.id}\n                        key={spending.id}\n                    />\n                }) : ''}\n            </div>\n        </div>\n    )\n}\n\n\nfunction Person(props) {\n    const {id, name, eatMeat, drinksAlcohol} = props\n    const dispatch = useDispatch()\n\n    function onChangeName(e) {\n        dispatch(changePersonName({\n            id: id,\n            name: e.target.value,\n        }))\n    }\n\n    function onChangeDrinksAlcohol() {\n        dispatch(toggleDrinksAlcohol({id: id}))\n    }\n\n    function onChangeEatMeat() {\n        dispatch(toggleEatMeat({id: id}))\n    }\n\n    return (\n        <div className={'row align-content-center'}>\n            <div className={'row justify-content-center'}>\n                <div className={'col-md-12 col-lg-6'}>\n                    <div className=\"input-group flex-nowrap\">\n                        <span className=\"input-group-text\" id=\"name\"><i className=\"bi bi-person-circle\"/></span>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Name\" aria-label=\"Username\"\n                               aria-describedby=\"name\" value={name} onChange={onChangeName}/>\n                    </div>\n                </div>\n                <div className={'col-md-12 col-lg-6 align-self-center'}>\n                    <div className=\"form-check form-check-inline\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"alcoholCheckbox\" checked={drinksAlcohol}\n                               onChange={onChangeDrinksAlcohol}/>\n                        <label className=\"form-check-label\" htmlFor=\"alcoholCheckbox\">Alcohol</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"meatCheckbox\" checked={eatMeat}\n                               onChange={onChangeEatMeat}/>\n                        <label className=\"form-check-label\" htmlFor=\"meatCheckbox\">Meat</label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction Spending(props) {\n    const {id, amount, type} = props\n    const dispatch = useDispatch()\n\n    function onChangeAmount(e) {\n        dispatch(changeSpendingAmount({\n            id: id,\n            amount: e.target.value,\n        }))\n    }\n\n    function onChangeType(e) {\n        dispatch(changeSpendingType({\n            id: id,\n            type: e.target.value,\n        }))\n    }\n\n    return (\n        <div className={'row'} style={{marginTop: 5}}>\n            <div className=\"input-group flex-nowrap\">\n                <input type=\"number\" className=\"form-control\" placeholder=\"Amount\" value={amount}\n                       onChange={onChangeAmount}/>\n                <select className=\"form-select\" value={type} onChange={onChangeType}>\n                    <option value={'other'}>Other</option>\n                    <option value={'alcohol'}>Alcohol</option>\n                    <option value={'meat'}>Meat</option>\n                </select>\n            </div>\n        </div>\n    )\n}\n\nfunction Calculate(props) {\n    const groups = useSelector(state => state.groups)\n    const [show, setShow] = useState(false)\n\n\n\n    function onClick() {\n        console.log(JSON.stringify({\n                    eventName: 'event',\n                    participants: groups,\n                }), 'send data')\n        fetch('/calculator/calculate-spendings', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    eventName: 'event',\n                    participants: groups,\n                })\n            }\n        ).then((response) => {\n            if (!response.ok) {\n                console.log(response, 'error happen')\n            } else {\n                console.log(response, 'big success')\n            }\n        }).catch(function (error) {\n            console.log(error)\n        })\n\n    }\n\n    useEffect(() => {\n        if (groups.length >= 2) {\n            setShow(true)\n        }\n    }, [groups])\n\n\n    if (show) {\n        return <div className={'row align-content-center'} style={{marginTop: 10}}>\n            <button type=\"button\" className=\"btn btn-success btn-lg\" onClick={onClick}>\n                Calculate\n            </button>\n        </div>\n    } else {\n        return <div/>\n    }\n}","import Header from \"./components/Header\";\nimport {Outlet, useRoutes} from \"react-router-dom\";\nimport PartyConfiguration from \"./components/PartyConfiguration\";\n\n\n\nexport default function App() {\n    let routes = [\n        {\n            path: \"/\",\n            element: <Layout/>,\n            children: [\n                {index: true, element: <PartyConfiguration/>},\n            ]\n        }\n    ];\n    let element = useRoutes(routes);\n\n    return (\n        <div>\n            {element}\n        </div>\n    );\n}\n\n\nfunction Layout(){\n    return <div className={'container'}>\n        <Header/>\n        <Outlet/>\n    </div>\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState: {\n        value: 0\n    },\n    reducers: {\n        increment: state => {\n            state.value += 1\n        },\n        decrement: state => {\n            state.value -= 1\n        },\n        incrementByAmount: (state, action) => {\n            state.value += action.payload\n        }\n    }\n})\n\nexport const {increment, decrement, incrementByAmount} = counterSlice.actions","import {configureStore} from \"@reduxjs/toolkit\";\nimport {counterSlice} from './feature/counter/counterSlice'\nimport {groupsSlice} from \"./feature/groups/groupsSlice\";\n\nexport default configureStore({\n    reducer: {\n        counter: counterSlice.reducer,\n        groups: groupsSlice.reducer,\n    }\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}